!pip install keras
!pip install keras-datasets
!pip install tensorflow
!pip install tensorflow-keras
!pip install tensorflow-keras-utils
!pip install keras-models-sequential
!pip install keras-model
!pip install keras-layers
!pip install keras-layers-Dense
!pip install keras-layers-Conv2D
!pip install keras-layers-Flatten
!pip install matplotlib


from keras.datasets import mnist
from tensorflow.keras.utils import to_categorical
from keras.models import Sequential
from keras.layers import Dense, Conv2D, Flatten
import matplotlib.pyplot as plt

#download mnist data and spilt into train and test sets
(X_train, Y_train), (X_test, Y_test) = mnist.load_data()

#plot the first image in the dataset
plt.imshow(X_train[0])
plt.show()

print("1_vaishnavi Boga")
print(X_train[0].shape)
X_train = X_train.reshape(60000,28,28,1)
X_test = X_test.reshape(10000,28,28,1)

Y_train = to_categorical(Y_train)
Y_test = to_categorical(Y_test)
Y_train[0]
print(Y_train[0])

model = Sequential()
#add model laters
#learn image features
model.add(Conv2D(64, kernel_size=3, activation='relu', input_shape=(28,28,1)))
model.add(Conv2D(32, kernel_size=3, activation='relu'))

model.add(Flatten())
model.add(Dense(10, activation='softmax'))

model.compile(optimizer='adam', loss='categorical_crossentropy', 
              metrics=['accuracy'])
#train
model.fit(X_train, Y_train, validation_data=(X_test, Y_test), epochs=1)

print(model.predict(X_test[:4]))
#actual results for 1st 4 images in the test set
print(Y_test[:4])
